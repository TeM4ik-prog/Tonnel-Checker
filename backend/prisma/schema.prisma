generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id         String  @id @default(uuid())
  telegramId Int     @unique
  username   String
  lastName   String?
  firstName  String?

  authTonnelData String?

  minProfit Float @default(0.5)

  messages GoodPriceMessage[]
  // UserFilters UserFilters[]
}

model Filters {
  id String @id @default(uuid())

  nft         String
  models      Json
  backgrounds Json
  symbols     Json

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Gift {
  id       Int @id @default(autoincrement())
  giftId   Int
  giftNum  Int
  name     String
  price    Float
  model    String
  symbol   String
  backdrop String

  giftMessages GoodPriceMessage[]

  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
  GiftsDataUpdate   GiftsDataUpdate? @relation(fields: [giftsDataUpdateId], references: [id], onUpdate: Cascade)
  giftsDataUpdateId String?

}

model GiftsDataUpdate {
  id    String @id @default(uuid())
  Gifts Gift[]

  profit    Float
  sellPrice Float

  createdAt             DateTime             @default(now())
  updatedAt             DateTime             @default(now())
  PackGiftsDataUpdate   PackGiftsDataUpdate? @relation(fields: [packGiftsDataUpdateId], references: [id], onUpdate: Cascade)
  packGiftsDataUpdateId String?
}

model PackGiftsDataUpdate {
  id              String            @id @default(uuid())
  GiftsDataUpdate GiftsDataUpdate[]
  updatedAt       DateTime          @default(now())
}

model ActiveChat {
  id             Int      @id @default(autoincrement())
  chatId         Int
  userTelegramId Int
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@unique([chatId, userTelegramId])
}

model GoodPriceMessage {
  id        String @id @default(uuid())
  chatId    Int
  messageId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  hidden Boolean @default(false)

  User   User   @relation(fields: [userId], references: [id])
  userId String

  Gift Gift @relation(fields: [giftId], references: [id])
  giftId Int


  @@unique([chatId, messageId])
}


// ______________

model GiftModel {
  id String @id @default(uuid())

  name        String @unique
  models      Json
  backgrounds Json
  symbols     Json
}

model GiftBackground {
  id       String @id @default(uuid())
  backdrop String

  centerColor  Int
  edgeColor    Int
  patternColor Int
  textColor    Int
  name         String
  permille     Int
}
